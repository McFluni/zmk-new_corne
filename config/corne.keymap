#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include "keys_de.h"
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD0";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT>, <&kp CAPS>;
        };

        td1: td_A_Umlaut {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <167>;
            bindings = <&kp A>, <&kp DE_A_UMLAUT>;
        };

        td2: td_U_Umlaut {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <160>;
            bindings = <&kp U>, <&kp DE_U_UMLAUT>;
        };

        td3: td_ESC_Caret {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&kp ESC>, <&kp DE_CARET>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <14 15 16 17 21 22 23 24>;
            hold-trigger-on-release;
        };

        sk_mo: sk_mo {
            compatible = "zmk,behavior-hold-tap";
            label = "sk_mo";
            bindings = <&mo>, <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        label = "RGB_ENCODER";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    combos {
        compatible = "zmk,combos";

        ToggleBLT {
            bindings = <&tog 4>;
            key-positions = <5 7>;
            layers = <0>;
        };

        ToggleMNCR {
            bindings = <&to 6>;
            key-positions = <2 3 4>;
            layers = <0>;
        };

        ToNum {
            bindings = <&to 1>;
            key-positions = <41 4>;
            layers = <0>;
        };

        ToSymbol {
            bindings = <&to 2>;
            key-positions = <45 8>;
            layers = <0>;
        };

        ToNav {
            bindings = <&to 3>;
            key-positions = <42 4>;
            layers = <0>;
        };
    };

    macros {
        middledot: middledot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_1 &kp KP_NUMBER_8 &kp KP_NUMBER_3>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "MIDDLEDOT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "COLEDH";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |                ↑    |  Y  |  U   |  I  |  O  |  P  | BKSP |      &kp UP_ARROW 
            // | SHIFT |  A  |  S  |  D  |  F  |  G  |               ↓    |  H  |  J   |  K  |  L  |  ;  |  '   | 
            // | CTRL |  Z  |  X  |  C  |  V  |  B  |                ←    |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |                →    | ENT | RSE  | ALT |
            //                                                      enter

            bindings = <
&lt 6 ESCAPE    &kp Q  &kp W              &kp E  &kp R          &kp T      &kp UP           &kp DE_Z   &td2          &kp DE_I      &kp DE_O       &kp DE_P         &kp DE_SZ
&kp LEFT_SHIFT  &td1   &kp S              &kp D  &kp F          &kp G      &msc SCRL_DOWN   &kp DE_H   &kp DE_J      &kp DE_K      &kp DE_L       &kp DE_O_UMLAUT  &kp RIGHT_SHIFT
&kp LCTRL       &kp Z  &kp X              &kp C  &kp V          &kp B      &kp LEFT_ARROW   &kp DE_N   &kp DE_M      &kp DE_COMMA  &kp DE_PERIOD  &kp DE_MINUS     &kp RIGHT_CONTROL
                       &kp LG(LA(ENTER))  &mo 1  &kp BACKSPACE  &kp DEL    &kp RIGHT_ARROW  &kp ENTER  &kp DE_SPACE  &mo 2
                                                                           &kp ENTER
            >;

            label = "COLEDH";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&to 0          &trans  &kp FSLH          &kp UP     &kp N5     &kp LEFT_PARENTHESIS    &mmv MOVE_UP     &kp RIGHT_PARENTHESIS  &kp DE_N7   &kp DE_N8  &kp DE_N9  &kp COLON     &kp LG(LS(D))
&kp C_AL_CALC  &kp N1  &kp LEFT_ARROW    &kp DOWN   &kp RIGHT  &kp EQUAL               &mmv MOVE_DOWN   &kp EQUAL              &kp DE_N4   &kp DE_N5  &kp DE_N6  &kp DE_PLUS   &kp DE_ASTERISK
&kp LEFT_GUI   &trans  &kp LALT          &kp LCTRL  &kp LSHFT  &kp LEFT_BRACKET        &mmv MOVE_LEFT   &kp RIGHT_BRACKET      &kp DE_N1   &kp DE_N2  &kp DE_N3  &kp DE_MINUS  &kp DE_SLASH
                       &kp LC(NUMBER_0)  &trans     &trans     &kp SPACE               &mmv MOVE_RIGHT  &kp BSPC               &kp PERIOD  &kp DE_N0
                                                                                       &mkp LCLK
            >;

            label = "NUMBER";
            sensor-bindings = <&rgb_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&to 0   &trans           &trans       &trans     &trans      &kp COLON      &mmv MOVE_UP     &kp CARET  &kp AMPS   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp ASTERISK  &kp TILDE
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH   &kp DOLLAR  &kp PERCENT    &mmv MOVE_DOWN   &kp MINUS  &kp EQUAL  &kp LBKT              &kp RBKT               &kp BSLH      &kp GRAVE
&trans  &kp LGUI         &kp LALT     &kp LCTRL  &kp LSHFT   &trans         &mmv MOVE_LEFT   &kp UNDER  &kp PLUS   &kp LBRC              &kp RBRC               &kp PIPE      &kp RET
                         &trans       &trans     &trans      &kp SPACE      &mmv MOVE_RIGHT  &kp BSPC   &trans     &kp DEL
                                                                            &mkp LCLK
            >;

            label = "SYMBOL";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "NAV";
            bindings = <
&to 0   &kp F1    &kp F2      &kp F3     &kp F4         &kp F5      &mmv MOVE_UP     &kp LC(Y)      &kp LC(C)  &kp UP     &kp LC(V)  &kp LC(Z)  &kp LG(LS(D))
&trans  &kp LGUI  &kp LALT    &kp LCTRL  &kp LSHFT      &mkp MB4    &mmv MOVE_DOWN   &kp C_AL_CALC  &kp LEFT   &kp DOWN   &kp RIGHT  &kp LC(X)  &kp F12
&trans  &trans    &trans      &kp LC(A)  &kp LG(LS(D))  &mkp MB5    &mmv MOVE_LEFT   &kp INSERT     &kp HOME   &kp PG_DN  &kp PG_UP  &kp END    &kp PAUSE_BREAK
                  &kp C_MUTE  &trans     &trans         &trans      &mmv MOVE_RIGHT  &mkp LCLK      &mkp RCLK  &mkp MCLK
                                                                    &mkp LCLK
            >;

            label = "NAV";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_4 {
            label = "BLTRGB";
            display-name = "BLTRGB";
            bindings = <
&to 0   &kp N1           &kp N2          &kp N3           &kp N4           &kp N5             &mmv MOVE_UP     &kp N6           &kp N7    &kp N8           &kp N9           &kp N0    &bt BT_CLR
&trans  &bt BT_SEL 0     &bt BT_SEL 1    &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4       &mmv MOVE_DOWN   &kp LEFT         &kp DOWN  &kp UP           &kp RIGHT        &kp HOME  &kp PG_UP
&trans  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_SPI  &rgb_ug RGB_SPD  &rgb_ug RGB_EFF    &mmv MOVE_LEFT   &rgb_ug RGB_EFR  &trans    &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp END   &kp PG_DN
                         &kp C_MUTE      &trans           &trans           &trans             &mmv MOVE_RIGHT  &trans           &trans    &trans
                                                                                              &mkp LCLK
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_5 {
            label = "FUN";
            display-name = "FUN";
            bindings = <
&trans          &trans      &trans      &trans            &kp F5   &trans      &mmv MOVE_UP     &trans  &kp F6   &trans  &trans           &trans          &trans
&trans          &kp F1      &kp F2      &kp F3            &kp F4   &mkp MB4    &mmv MOVE_DOWN   &trans  &kp F7   &kp F8  &kp F9           &kp F10         &trans
&kp C_PREVIOUS  &kp C_NEXT  &kp C_STOP  &kp C_PLAY_PAUSE  &kp F11  &mkp MB5    &mmv MOVE_LEFT   &trans  &kp F12  &trans  &kp PRINTSCREEN  &kp SCROLLLOCK  &kp PAUSE_BREAK
                            &kp C_MUTE  &trans            &trans   &trans      &mmv MOVE_RIGHT  &trans  &trans   &trans
                                                                               &mkp LCLK
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_6 {
            bindings = <
&trans     &trans  &kp E   &kp W   &kp F      &kp NUMBER_1    &trans  &kp KP_NUMLOCK   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans      &trans
&trans     &kp L   &kp A   &kp S   &kp D      &kp N2          &trans  &trans           &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &middledot  &trans
&kp LCTRL  &kp F1  &kp F2  &kp F3  &kp F4     &kp N3          &trans  &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_DOT  &trans
                   &to 0   &trans  &kp LSHFT  &kp SPACE       &trans  &to 0            &trans           &trans
                                                              &trans
            >;

            label = "MINECR";
        };
    };
};
